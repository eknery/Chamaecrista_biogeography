province_col = c(
"Guianan Lowlands province" = "forestgreen",
"Guianan province" = "forestgreen",
"Imeri province" = "forestgreen",
"Napo province" = "forestgreen",
"Para province" = "forestgreen",
"Roraima province" = "forestgreen",
"Madeira province" = "forestgreen",
"Rondonia province" = "forestgreen",
"Ucayali province" = "forestgreen",
"Yungas province" = "forestgreen",
"Xingu-Tapajos province" = "forestgreen",
"Cerrado province" = "orange",
"Caatinga province" = "gold",
"Chapada Diamantina province" = "red",
"Southern Espinhaco province" = "red",
"Araucaria Forest province" = "cyan",
"Atlantic province"= "cyan",
"Parana Forest province"= "cyan",
"Chiapas Highlands province" = "mediumorchid",
"Sierra Madre Occidental province" = "mediumorchid",
"Sierra Madre del Sur province" = "mediumorchid",
"Sierra Madre Oriental province" = "mediumorchid",
"Transmexican Volcanic Belt province"= "mediumorchid",
"Bahama province" = "mediumorchid",
"Cayman Islands province"= "mediumorchid",
"Cuban province"= "mediumorchid",
"Hispaniola province"= "mediumorchid",
"Jamaica province"= "mediumorchid",
"Lesser Antilles province"= "mediumorchid",
"Puerto Rico province"= "mediumorchid",
"Balsas Basin province" = "mediumorchid",
"Mosquito province"= "mediumorchid",
"Pacific Lowlands province"= "mediumorchid",
"Veracruzan province"= "mediumorchid",
"Yucatan Peninsula Province"= "mediumorchid",
"Cauca province"= "mediumorchid",
"Choco-Darien province"= "mediumorchid",
"Ecuadorian province"= "mediumorchid",
"Galapagos Islands province"= "mediumorchid",
"Guajira province"= "mediumorchid",
"Guatuso-Talamanca province"= "mediumorchid",
"Magdalena province"= "mediumorchid",
"Puntarenas-Chiriqui province"= "mediumorchid",
"Sabana province"= "mediumorchid",
"Trinidad province"= "mediumorchid",
"Venezuelan province"= "mediumorchid",
"Western Ecuador province"= "mediumorchid",
"Atacama province" = "blue",
"Comechingones province" = "blue",
"Cuyan High Andean province" = "blue",
"Desert province" = "blue",
"Paramo province" = "blue",
"Puna province" = "blue",
"Chaco province" = "white",
"Pampean province" = "white",
"Esteros del Ibera province" = "white",
"Monte province" = "white",
"N/A" = "slategray"
)
ggplot(shp)+
geom_sf(aes(fill=Provincias)) +
scale_fill_manual(values = province_col,
labels = NULL) +
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=12,face="bold"),
legend.position = "none")
### libraries
library("ape")
library("phytools")
library("rexpokit")
library("cladoRcpp")
library("BioGeoBEARS")
### load results
load("7_biogeo_results/micro_DEC_2.Rdata")
### phylogenetic tree location
trfn = "5_posterior/mcc.tree"
tr = read.tree(file = trfn)
### number of extant and ancestral branches
n_tips = Ntip(tr)
n_anc = tr$Nnode
### reading range data
geogfn = "6_biogeo_data/micro_biogeo.data"
moref(geogfn)
### converting phylip format to tipranges
tipranges = getranges_from_LagrangePHYLIP(lgdata_fn= geogfn)
### creating binary spp x areas
states_bin = tipranges@df
### creating numeric matrix from binaries
states_num = c()
for(i in 1:ncol(states_bin)){
one_col = as.numeric(states_bin[,i])
one_col[one_col == 1] = i
states_num = cbind(states_num, one_col)
}
### naming
row.names(states_num) = row.names(states_bin)
colnames(states_num) = colnames(states_bin)
### name of areas
areanames = names(tipranges@df)
areanames
### setting maximum number of areas occupied
max_range_size = max(rowSums(dfnums_to_numeric(tipranges@df)))
### accept null range?
include_null_range = F
### list of codes for each node
states_list_0based_index = rcpp_areas_list_to_states_list(
areas= areanames,
maxareas= max_range_size,
include_null_range= include_null_range
)
### states for each node
statenames = areas_list_to_states_list_new(
areas= areanames,
maxareas= max_range_size, include_null_range= include_null_range,
split_ABC=FALSE
)
### relative probability of each states for each node
relprobs_matrix = res_dec2$ML_marginal_prob_each_state_at_branch_top_AT_node
### get maximum probiBIlity values
ml_probs = get_ML_probs(relprobs_matrix)
### get states with maximum probability values
ml_states = get_ML_states_from_relprobs(
relprobs_matrix,
statenames,
returnwhat="states",
if_ties="takefirst"
)
### only ancestral states
anc_states = ml_states[n_tips:(n_tips+n_anc)]
source("0_scripts/function_mix_color.R")
### colors for each area
area_col = c(
"0" = "white",
"A" = "forestgreen",
"B" = "orange",
"C" = "yellow",
"D" = "red",
"E" = "cyan",
"F" = "mediumorchid",
"G" = "slategray",
"H" = "blue",
"I" = "black"
)
### get states in reconstruction
uni_states = unique(anc_states)
### get colors for each state
state_col = c()
for(one_state in uni_states){
# break code
string= unlist(strsplit(one_state, split = ""))
# first and last code arear
first_code = string[1]
last_code = string[length(string)]
# get corresponding colors
first_col = area_col[[first_code]]
last_col = area_col[[last_code]]
# mix colors
one_col = mix_color(col1 = first_col,
col2 = last_col)
state_col = c(state_col, one_col)
}
names(state_col) = uni_states
### get colors for ancestral states
anc_state_col = c()
### export heatmap
tiff("7_biogeo_results/heatmap_plot.tiff",
units="cm", width=7, height=16.5, res=900)
phylo.heatmap(tree = tr,
X= states_num,
fsize= c(0.1,0.5,0.1),
colors= area_col,
split= c(0.9,0.1),
standardize= F,
legend = F
)
for(anc in anc_states){
anc_state_col = c(anc_state_col, state_col[anc])
}
dev.off()
### export dec
tiff("7_biogeo_results/dec_plot.tiff",
units="cm", width=7, height=14, res=900)
plotTree(tree= tr,
lwd = 0.5,
fsize= 0.1,
ftype= "i")
nodelabels(pch = 22,
cex= 0.5,
col = "black",
bg = anc_state_col
)
axisPhylo(pos= -0.1,
font=3,
cex.axis=0.5
)
dev.off()
### export dec
tiff("7_biogeo_results/map.tiff",
units="cm", width=7, height=14, res=900)
ggplot(shp)+
geom_sf(aes(fill=Provincias)) +
scale_fill_manual(values = province_col,
labels = NULL) +
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=12,face="bold"),
legend.position = "none")
dev.off()
### colors for each area
area_col = c(
"0" = "white",
"A" = "forestgreen",
"B" = "orange",
"C" = "gold",
"D" = "red",
"E" = "cyan",
"F" = "mediumorchid",
"G" = "slategray",
"H" = "blue",
"I" = "black"
)
### get states in reconstruction
uni_states = unique(anc_states)
### get colors for each state
state_col = c()
for(one_state in uni_states){
# break code
string= unlist(strsplit(one_state, split = ""))
# first and last code arear
first_code = string[1]
last_code = string[length(string)]
# get corresponding colors
first_col = area_col[[first_code]]
last_col = area_col[[last_code]]
# mix colors
one_col = mix_color(col1 = first_col,
col2 = last_col)
state_col = c(state_col, one_col)
}
names(state_col) = uni_states
### get colors for ancestral states
anc_state_col = c()
for(anc in anc_states){
anc_state_col = c(anc_state_col, state_col[anc])
}
### export heatmap
tiff("7_biogeo_results/heatmap_plot.tiff",
units="cm", width=7, height=16.5, res=900)
phylo.heatmap(tree = tr,
X= states_num,
fsize= c(0.1,0.5,0.1),
colors= area_col,
split= c(0.9,0.1),
standardize= F,
legend = F
)
dev.off()
phylo.heatmap(tree = tr,
X= states_num,
fsize= c(0.1,0.5,0.1),
colors= area_col,
split= c(0.9,0.1),
standardize= F,
legend = F
)
phylo.heatmap(tree = tr,
X= states_num,
fsize= c(0.1,0.5,0.1),
colors= area_col,
split= c(0.9,0.1),
standardize= F,
legend = F
)
phylo.heatmap(tree = tr,
X= states_num,
fsize= c(0.1,0.5,0.1),
colors= area_col,
split= c(0.9,0.1),
standardize= T,
legend = F
)
### colors for each area
area_col = c(
"0" = "white",
"A" = "darkgreen",
"B" = "pink",
"C" = "lightgoldenrod",
"D" = "darkred",
"E" = "mediumseagreen",
"F" = "lightblue",
"G" = "slategray",
"H" = "mediumpurple",
"I" = "black"
)
### get states in reconstruction
uni_states = unique(anc_states)
### get colors for each state
state_col = c()
for(one_state in uni_states){
# break code
string= unlist(strsplit(one_state, split = ""))
# first and last code arear
first_code = string[1]
last_code = string[length(string)]
# get corresponding colors
first_col = area_col[[first_code]]
last_col = area_col[[last_code]]
# mix colors
one_col = mix_color(col1 = first_col,
col2 = last_col)
state_col = c(state_col, one_col)
}
names(state_col) = uni_states
### get colors for ancestral states
anc_state_col = c()
for(anc in anc_states){
anc_state_col = c(anc_state_col, state_col[anc])
}
phylo.heatmap(tree = tr,
X= states_num,
fsize= c(0.1,0.5,0.1),
colors= area_col,
split= c(0.9,0.1),
standardize= T,
legend = F
)
### export heatmap
tiff("7_biogeo_results/heatmap_plot.tiff",
units="cm", width=7, height=16.5, res=900)
phylo.heatmap(tree = tr,
X= states_num,
fsize= c(0.1,0.5,0.1),
colors= area_col,
split= c(0.9,0.1),
standardize= T,
legend = F
)
dev.off()
state_col
area_col
### colors for each area
area_col = c(
"0" = "white",
"A" = "darkgreen",
"B" = "pink",
"C" = "lightgoldenrod",
"D" = "darkred",
"E" = "mediumseagreen",
"F" = "lightblue",
"G" = "slategray",
"H" = "mediumpurple",
"I" = "black"
)
### get states in reconstruction
uni_states = unique(anc_states)
### get colors for each state
state_col = c()
for(one_state in uni_states){
# break code
string= unlist(strsplit(one_state, split = ""))
# first and last code arear
first_code = string[1]
last_code = string[length(string)]
# get corresponding colors
first_col = area_col[[first_code]]
last_col = area_col[[last_code]]
# mix colors
one_col = mix_color(col1 = first_col,
col2 = last_col)
state_col = c(state_col, one_col)
}
names(state_col) = uni_states
### get colors for ancestral states
anc_state_col = c()
for(anc in anc_states){
anc_state_col = c(anc_state_col, state_col[anc])
}
phylo.heatmap(tree = tr,
X= states_num,
fsize= c(0.1,0.5,0.1),
colors= area_col,
split= c(0.9,0.1),
standardize= T,
legend = F
)
# Carregar o pacote sf
library("ggplot2")
library("sf")
# Caminho para o shapefile
# Substitua pelo caminho correto do seu arquivo shapefile
dir_shp <- "6_biogeo_data/neotropical_shp"
# Ler o shapefile
shp <- st_read(dir_shp)
# nome das provincias
unique(shp$Provincias)
province_col = c(
"Guianan Lowlands province" = "forestgreen",
"Guianan province" = "forestgreen",
"Imeri province" = "forestgreen",
"Napo province" = "forestgreen",
"Para province" = "forestgreen",
"Roraima province" = "forestgreen",
"Madeira province" = "forestgreen",
"Rondonia province" = "forestgreen",
"Ucayali province" = "forestgreen",
"Yungas province" = "forestgreen",
"Xingu-Tapajos province" = "forestgreen",
"Cerrado province" = "pink",
"Caatinga province" = "lightgoldenrod",
"Chapada Diamantina province" = "darkred",
"Southern Espinhaco province" = "darkred",
"Araucaria Forest province" = "lightgreen",
"Atlantic province"= "lightgreen",
"Parana Forest province"= "lightgreen",
"Chiapas Highlands province" = "lightblue",
"Sierra Madre Occidental province" = "lightblue",
"Sierra Madre del Sur province" = "lightblue",
"Sierra Madre Oriental province" = "lightblue",
"Transmexican Volcanic Belt province"= "lightblue",
"Bahama province" = "lightblue",
"Cayman Islands province"= "lightblue",
"Cuban province"= "lightblue",
"Hispaniola province"= "lightblue",
"Jamaica province"= "lightblue",
"Lesser Antilles province"= "lightblue",
"Puerto Rico province"= "lightblue",
"Balsas Basin province" = "lightblue",
"Mosquito province"= "lightblue",
"Pacific Lowlands province"= "lightblue",
"Veracruzan province"= "lightblue",
"Yucatan Peninsula Province"= "lightblue",
"Cauca province"= "lightblue",
"Choco-Darien province"= "lightblue",
"Ecuadorian province"= "lightblue",
"Galapagos Islands province"= "lightblue",
"Guajira province"= "lightblue",
"Guatuso-Talamanca province"= "lightblue",
"Magdalena province"= "lightblue",
"Puntarenas-Chiriqui province"= "lightblue",
"Sabana province"= "lightblue",
"Trinidad province"= "lightblue",
"Venezuelan province"= "lightblue",
"Western Ecuador province"= "lightblue",
"Atacama province" = "mediumpurple",
"Comechingones province" = "mediumpurple",
"Cuyan High Andean province" = "mediumpurple",
"Desert province" = "mediumpurple",
"Paramo province" = "mediumpurple",
"Puna province" = "mediumpurple",
"Chaco province" = "white",
"Pampean province" = "white",
"Esteros del Ibera province" = "white",
"Monte province" = "white",
"N/A" = "darkblue"
)
### export dec
tiff("7_biogeo_results/map.tiff",
units="cm", width=7, height=14, res=900)
ggplot(shp)+
geom_sf(aes(fill=Provincias)) +
scale_fill_manual(values = province_col,
labels = NULL) +
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=12,face="bold"),
legend.position = "none")
dev.off()
### export dec
tiff("7_biogeo_results/map.tiff",
units="cm", width=7, height=6.5, res=900)
ggplot(shp)+
geom_sf(aes(fill=Provincias)) +
scale_fill_manual(values = province_col,
labels = NULL) +
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=12,face="bold"),
legend.position = "none")
dev.off()
### export dec
tiff("7_biogeo_results/map.tiff",
units="cm", width=7, height=6.5, res=900)
ggplot(shp)+
geom_sf(aes(fill=Provincias)) +
scale_fill_manual(values = province_col,
labels = NULL) +
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=10,face="bold"),
legend.position = "none")
dev.off()
### export dec
tiff("7_biogeo_results/map.tiff",
units="cm", width=7, height=6.5, res=900)
ggplot(shp)+
geom_sf(aes(fill=Provincias),
col = "black") +
scale_fill_manual(values = province_col,
labels = NULL) +
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=10,face="bold"),
legend.position = "none")
dev.off()
