normalize = T)
pruned_trees_list
unlist(pruned_trees_list)
pruned_trees
as.phylo(pruned_trees)
as.multiPhylo(pruned_trees)
pruned_trees
# pruning trees to sampled species
pruned_trees_list = list()
for (i in 1:length(tree_list) ){
pruned_trees = list()
for(j in 1:length(tree_list[[i]]) ){
pruned_trees[j] = keep.tip(phy = tree_list[[i]][[j]],
tip = ingroup_common_names)
}
pruned_trees_list[[i]] = pruned_trees
}
pruned_trees
as.multiPhylo(pruned_trees)
# pruning trees to sampled species
pruned_trees_list = list()
for (i in 1:length(tree_list) ){
pruned_trees = list()
for(j in 1:length(tree_list[[i]]) ){
pruned_trees[[j]] = keep.tip(phy = tree_list[[i]][[j]],
tip = ingroup_common_names)
}
pruned_trees_list[[i]] = pruned_trees
}
pruned_trees_list
pruned_trees
RF.dist(pruned_trees_list,
tree2 = NULL,
normalize = T)
pruned_trees
RF.dist(c(pruned_trees_list[[1]]),
tree2 = NULL,
normalize = T)
pruned_trees_list[[1]]
# pruning trees to sampled species
all_pruned_trees = c()
for (i in 1:length(tree_list) ){
for(j in 1:length(tree_list[[i]]) ){
pruned_tree[[j]] = keep.tip(phy = tree_list[[i]][[j]],
tip = ingroup_common_names)
all_pruned_trees = c(all_pruned_trees, pruned_tree)
}
}
# pruning trees to sampled species
all_pruned_trees = c()
for (i in 1:length(tree_list) ){
for(j in 1:length(tree_list[[i]]) ){
pruned_tree = keep.tip(phy = tree_list[[i]][[j]],
tip = ingroup_common_names)
all_pruned_trees = c(all_pruned_trees, pruned_tree)
}
}
all_pruned_trees
RF.dist(all_pruned_trees,
tree2 = NULL,
normalize = T)
RF.dist(all_pruned_trees[1],
tree2 = NULL,
normalize = T)
all_pruned_trees[1]
RF.dist(tree_list[[1]],
tree2 = NULL,
normalize = T)
tree_list[[1]]
as.multiPhylo.phylo<-function(x){
obj<-list(x)
class(obj)<-"multiPhylo"
obj
}
as.multiPhylo.phylo(x = all_pruned_trees)
all_pruned_trees
# pruning trees to sampled species
pruned_trees_list = list()
for (i in 1:length(tree_list) ){
pruned_trees = list()
for(j in 1:length(tree_list[[i]]) ){
pruned_trees[[j]] = keep.tip(phy = tree_list[[i]][[j]],
tip = ingroup_common_names)
}
pruned_trees_list[[i]] = pruned_trees
}
pruned_trees_list
as.multiPhylo.phylo(x = pruned_trees_list)
as.multiPhylo.phylo(x = pruned_trees_list[[i]])
pruned_trees_list[[i]]
as.multiPhylo.phylo(x = as.vector(pruned_trees_list[[i]]) )
x = as.multiPhylo.phylo(x = as.vector(pruned_trees_list[[i]]) )
x
plot(x)
tree_list[[i]]
keep.tip(phy = tree_list[[i]],
tip = ingroup_common_names)
as.multi.phylo(tree_list[[i]] )
as.multiPhylo.phylo(tree_list[[i]] )
keep.tip(phy = as.multiPhylo.phylo(tree_list[[i]] ),
tip = ingroup_common_names)
tree_list[i]
keep.tip(phy = tree_list[i] ,
tip = ingroup_common_names)
tree_list[i][1]
tree_list$ETS
keep.tip(phy = tree_list$ETS ,
tip = ingroup_common_names)
keep.tip(phy = tree_list$ETS[1] ,
tip = ingroup_common_names)
keep.tip(phy = tree_list$ETS[[1]] ,
tip = ingroup_common_names)
# pruning trees to sampled species
pruned_trees_list = tree_list
tree_list[[i]]
# pruning trees to sampled species
pruned_trees_list = tree_list
for (i in 1:length(tree_list) ){
pruned_trees = tree_list[[i]]
for(j in 1:length(tree_list[[i]]) ){
pruned_trees[[j]] = keep.tip(phy = tree_list[[i]][[j]],
tip = ingroup_common_names)
}
pruned_trees_list[[i]] = pruned_trees
}
pruned_trees_list
pruned_trees_list[[i]]
pruned_trees_list[[i]][i]
pruned_trees_list[[i]][[i]]
unlist(pruned_trees_list)
RF.dist(pruned_tree_list[[1]],
tree2 = NULL,
normalize = T)
pruned_trees_list
pruned_tree_list[[1]]
pruned_trees_list[[1]]
RF.dist(pruned_trees_list[[1]],
tree2 = NULL,
normalize = T)
### transforming in vector
pruned_trees_vec = c()
for(i in 1:length(pruned_trees_list)){
pruned_trees_vec = c(pruned_trees_vec, pruned_trees_list[[i]] )
}
RF.dist(pruned_trees_vec,
tree2 = NULL,
normalize = T)
pruned_trees_vec
RF.dist(c(pruned_trees_list[[1]],  pruned_trees_list[[2]] ),
tree2 = NULL,
normalize = T)
RF.dist(c(pruned_trees_list[[1]],
pruned_trees_list[[2]],
pruned_trees_list[[3]]),
tree2 = NULL,
normalize = T)
RF.dist(c(pruned_trees_list[[1]],
pruned_trees_list[[2]],
pruned_trees_list[[3]],
pruned_trees_list[[4]]
)
tree2 = NULL,
normalize = T)
RF.dist(c(pruned_trees_list[[1]],
pruned_trees_list[[2]],
pruned_trees_list[[3]],
pruned_trees_list[[4]]
),
tree2 = NULL,
normalize = T)
RF.dist(c(pruned_trees_list[[1]],
pruned_trees_list[[2]],
pruned_trees_list[[3]],
pruned_trees_list[[4]],
pruned_trees_list[[5]]
),
tree2 = NULL,
normalize = T)
rf_dist = RF.dist(c(pruned_trees_list[[1]],
pruned_trees_list[[2]],
pruned_trees_list[[3]],
pruned_trees_list[[4]],
pruned_trees_list[[5]]
),
tree2 = NULL,
normalize = T)
### distance
dist = RF.dist(c(pruned_trees_list[[1]],
pruned_trees_list[[2]],
pruned_trees_list[[3]],
pruned_trees_list[[4]],
pruned_trees_list[[5]]
),
tree2 = NULL,
normalize = T)
### PCOA
pc_rf = pcoa(dist, correction="none", rn=NULL)
pc_rf
### PCOA
pcoa = pcoa(dist, correction="none", rn=NULL)
pcoa
pcoa$vectors
names(tree_list)
pruned_trees_list
pruned_trees_list[[i]]
length(pruned_trees_list[[i]])
### getting vector with names for each distance
locus = c()
for(i in 1:length(pruned_trees_list)){
locus_name = names(pruned_trees_list)[i]
locus_rep = rep(locus_name, length.out= length(pruned_trees_list[[i]]) )
locus = c(locus, locus_rep)
}
locus
cbind(locus, pcoa$vectors)
vectors = as.data.frame(cbind(locus, pcoa$vectors))
vectors
pcoa_df = as.data.frame(cbind(locus, pcoa$vectors))
ggplot(data = pcoa_df,
aes(x=Axis.1,
y=Axis.2,
color=locus)) +
geom_point(size = 2, alpha = 0.5) +
# scale_colour_manual(values=c("red4","orange2","blue4","cyan4","red2","hotpink1"))+
labs(x="PCo1", y="PCo2")+
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=13,face="bold"))
ggplot(data = pcoa_df,
aes(x=as.numeric(Axis.1),
y=Axis.2,
color=locus)) +
geom_point(size = 2, alpha = 0.5) +
# scale_colour_manual(values=c("red4","orange2","blue4","cyan4","red2","hotpink1"))+
labs(x="PCo1", y="PCo2")+
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=13,face="bold"))
ggplot(data = pcoa_df,
aes(x=as.numeric(Axis.1),
y=as.numeric(Axis.2),
color=locus)) +
geom_point(size = 2, alpha = 0.5) +
# scale_colour_manual(values=c("red4","orange2","blue4","cyan4","red2","hotpink1"))+
labs(x="PCo1", y="PCo2")+
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=13,face="bold"))
ggplot(data = pcoa_df,
aes(x=as.numeric(Axis.1),
y=as.numeric(Axis.2),
color=locus)) +
geom_point(size = 2, alpha = 0.5) +
scale_colour_manual(values=c("ETS"= "darkred",
"ITS"= "darkorange",
"matk" = "darkgolden",
"trnDT" = "darkgreen",
"trnLF" = "forestgreen"
)
)+
labs(x="PCo1", y="PCo2")+
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=13,face="bold"))
ggplot(data = pcoa_df,
aes(x=as.numeric(Axis.1),
y=as.numeric(Axis.2),
color=locus)) +
geom_point(size = 2, alpha = 0.5) +
scale_colour_manual(values=c("ETS"= "darkred",
"ITS"= "darkorange",
"matK" = "darkgolden",
"trnDT" = "darkgreen",
"trnLF" = "forestgreen"
)
)+
labs(x="PCo1", y="PCo2")+
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=13,face="bold"))
ggplot(data = pcoa_df,
aes(x=as.numeric(Axis.1),
y=as.numeric(Axis.2),
color=locus)) +
geom_point(size = 2, alpha = 0.5) +
# scale_colour_manual(values=c("ETS"= "darkred",
#                              "ITS"= "darkorange",
#                              "matK" = "darkgolden",
#                              "trnDT" = "darkgreen",
#                              "trnLF" = "forestgreen"
#                              )
#                     )+
labs(x="PCo1", y="PCo2")+
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=13,face="bold"))
ggplot(data = pcoa_df,
aes(x=as.numeric(Axis.1),
y=as.numeric(Axis.2),
color=locus)) +
geom_point(size = 2, alpha = 0.5) +
scale_colour_manual(values=c("ETS"= "darkred",
"ITS"= "darkorange",
"matK" = "darkgoldenrod",
"trnDT" = "darkgreen",
"trnLF" = "forestgreen"
)
)+
labs(x="PCo1", y="PCo2")+
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=13,face="bold"))
ggplot(data = pcoa_df,
aes(x=as.numeric(Axis.1),
y=as.numeric(Axis.2),
color=locus)) +
geom_point(size = 2, alpha = 0.5) +
scale_colour_manual(values=c("ETS"= "darkred",
"ITS"= "violet",
"matK" = "darkgoldenrod",
"trnDT" = "darkgreen",
"trnLF" = "forestgreen"
)
)+
labs(x="PCo1", y="PCo2")+
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=13,face="bold"))
ggplot(data = pcoa_df,
aes(x=as.numeric(Axis.1),
y=as.numeric(Axis.2),
color=locus)) +
geom_point(size = 2, alpha = 0.5) +
scale_colour_manual(values=c("ETS"= "darkred",
"ITS"= "red",
"matK" = "darkgoldenrod",
"trnDT" = "darkgreen",
"trnLF" = "forestgreen"
)
)+
labs(x="PCo1", y="PCo2")+
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=13,face="bold"))
ggplot(data = pcoa_df,
aes(x=as.numeric(Axis.1),
y=as.numeric(Axis.2),
color=locus)) +
geom_point(size = 2, alpha = 0.5) +
scale_colour_manual(values=c("ETS"= "darkred",
"ITS"= "darkorange",
"matK" = "darkgoldenrod",
"trnDT" = "darkgreen",
"trnLF" = "forestgreen"
)
)+
labs(x="PCo1", y="PCo2")+
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=13,face="bold"))
ggplot(data = pcoa_df,
aes(x=as.numeric(Axis.1),
y=as.numeric(Axis.2),
color=locus)) +
geom_point(size = 2, alpha = 0.5) +
scale_colour_manual(values=c("ETS"= "darkred",
"ITS"= "darkorange",
"matK" = "darkblue",
"trnDT" = "darkgreen",
"trnLF" = "darkgoldenrod"
)
)+
labs(x="PCo1", y="PCo2")+
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=13,face="bold"))
pcoa
pcoa_plot = ggplot(data = pcoa_df,
aes(x=as.numeric(Axis.1),
y=as.numeric(Axis.2),
color=locus)) +
geom_point(size = 2, alpha = 0.5) +
scale_colour_manual(values=c("ETS"= "darkred",
"ITS"= "darkorange",
"matK" = "darkblue",
"trnDT" = "darkgreen",
"trnLF" = "darkgoldenrod"
)
)+
labs(x="PCo1 (24.8%)", y="PCo2 (16.5)")+
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=13,face="bold"))
pcoa_plot
### export plot
tiff("3_topology_results/pcoa_RF_dist.tiff",
units="cm", width=7, height=7, res=600)
dev.off()
### export plot
tiff("3_topology_results/pcoa_RF_dist.tiff",
units="cm", width=7, height=7, res=600)
pcoa_plot
dev.off()
### plot pcoa
pcoa_plot = ggplot(data = pcoa_df,
aes(x=as.numeric(Axis.1),
y=as.numeric(Axis.2),
color=locus)) +
geom_point(size = 1, alpha = 0.5) +
scale_colour_manual(values=c("ETS"= "darkred",
"ITS"= "darkorange",
"matK" = "darkblue",
"trnDT" = "darkgreen",
"trnLF" = "darkgoldenrod"
)
)+
labs(x="PCo1 (24.8%)", y="PCo2 (16.5%)")+
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=13,face="bold"))
### export plot
tiff("3_topology_results/pcoa_RF_dist.tiff",
units="cm", width=7.5, height=7, res=600)
pcoa_plot
dev.off()
### plot pcoa
pcoa_plot = ggplot(data = pcoa_df,
aes(x=as.numeric(Axis.1),
y=as.numeric(Axis.2),
color=locus)) +
geom_point(size = 1, alpha = 0.5) +
scale_colour_manual(values=c("ETS"= "darkred",
"ITS"= "darkorange",
"matK" = "darkblue",
"trnDT" = "darkgreen",
"trnLF" = "darkgoldenrod"
)
)+
labs(x="PCo1 (24.8%)", y="PCo2 (16.5%)")+
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=13,face="bold"),
legend.position = "down")
pcoa_plot
### plot pcoa
pcoa_plot = ggplot(data = pcoa_df,
aes(x=as.numeric(Axis.1),
y=as.numeric(Axis.2),
color=locus)) +
geom_point(size = 1.5, alpha = 0.5) +
scale_colour_manual(values=c("ETS"= "darkred",
"ITS"= "darkorange",
"matK" = "darkblue",
"trnDT" = "darkgreen",
"trnLF" = "darkgoldenrod"
)
)+
labs(x="PCo1 (24.8%)", y="PCo2 (16.5%)")+
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=13,face="bold"),
legend.position = "bottom")
pcoa_plot
### export plot
tiff("3_topology_results/pcoa_RF_dist.tiff",
units="cm", width=7.5, height=7, res=600)
pcoa_plot
dev.off()
### plot pcoa
pcoa_plot = ggplot(data = pcoa_df,
aes(x=as.numeric(Axis.1),
y=as.numeric(Axis.2),
color=locus)) +
geom_point(size = 1.5, alpha = 0.5) +
scale_colour_manual(values=c("ETS"= "darkred",
"ITS"= "darkorange",
"matK" = "darkblue",
"trnDT" = "darkgreen",
"trnLF" = "darkgoldenrod"
)
)+
labs(x="PCo1 (24.8%)", y="PCo2 (16.5%)")+
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=12,face="bold"),
legend.position = "bottom")
### export plot
tiff("3_topology_results/pcoa_RF_dist.tiff",
units="cm", width=8.5, height=8, res=600)
pcoa_plot
dev.off()
pcoa_plot
### file names
dir_input = "1_ingroup/ingroup_sequences/"
file_names = list.files(dir_input)
file_names
